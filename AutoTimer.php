<?php
namespace kordar\timer;

use http\Exception\BadMethodCallException;
use yii\base\ErrorException;

class AutoTimer extends Timer
{
    public $isAuto = false;

    private function updateAutoTimer()
    {
        if ($this->activeSign === null && $this->start === 0) {
            return 'init';
        }

        $time = time();
        $usedTime = $time - $this->start;
        foreach ($this->manager as $_sign => $_time) {

            if ($_time - $usedTime > 0) {
                $this->manager[$_sign] = $_time - $usedTime;
                break;
            }

            $usedTime = $usedTime - $_time;
            unset($this->manager[$_sign]);
        }

        if (empty($this->manager)) {
            return 'stop';
        }

        $this->start = $time;
        return 'continue';
    }

    public function autoStart()
    {
        if ($this->isAuto == false) {
            parent::switchSign(null);
        }

        $status = $this->updateAutoTimer();
        if ($status === 'init') {
            $this->isAuto = true;
            $this->start = time();
        }

        // 自动关闭
        if ($status === 'stop') {
            $this->isAuto = false;
            $this->start = 0;
        }

        return true;
    }

    public function autoStop()
    {
        if ($this->isAuto == false) {
            return false;
        }

        $this->updateAutoTimer();
        $this->isAuto = false;
        $this->start = 0;
        return true;
    }

    public function getSecondBySign($sign)
    {
        if ($this->isAuto == false) {
            return parent::getSecondBySign($sign); // TODO: Change the autogenerated stub
        }

        $status = $this->updateAutoTimer();
        if ($status === 'stop') {
            $this->isAuto = false;
            $this->start = 0;
        }

        return isset($this->manager[$sign]) ? $this->manager[$sign] : 0;
    }

    public function addSecond($sign, $second)
    {
        if ($this->isAuto == false) {
            parent::addSecond($sign, $second); // TODO: Change the autogenerated stub
            return ;
        }

        $this->updateAutoTimer();
        if (isset($this->manager[$sign])) {
            $this->manager[$sign] += intval($second);
        } else {
            $this->manager[$sign] = intval($second);
        }
    }

    public function switchSign($sign)
    {
        if ($this->isAuto == true) {
            throw new ErrorException('自动开启模式，禁止切换.');
        }
        return parent::switchSign($sign); // TODO: Change the autogenerated stub
    }
}